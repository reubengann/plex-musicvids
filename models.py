from sqlalchemy import Column, Integer, String, Float, DateTime, Boolean, ForeignKey
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship

Base = declarative_base()


class MetadataItem(Base):

    __tablename__ = 'metadata_items'
    id = Column(Integer, primary_key=True)
    library_section_id = Column(Integer)
    parent_id = Column(Integer)
    metadata_type = Column(Integer)
    guid = Column(String)
    media_item_count = Column(Integer)
    title = Column(String)
    title_sort = Column(String)
    original_title = Column(String)
    studio = Column(String)
    rating = Column(Float)
    rating_count = Column(Integer)
    tagline = Column(String)
    summary = Column(String)
    trivia = Column(String)
    quotes = Column(String)
    content_rating = Column(String)
    content_rating_age = Column(Integer)
    index = Column(Integer)
    absolute_index = Column(Integer)
    duration = Column(Integer)
    user_thumb_url = Column(String)
    user_art_url = Column(String)
    user_banner_url = Column(String)
    user_music_url = Column(String)
    user_fields = Column(String)
    tags_genre = Column(String)
    tags_collection = Column(String)
    tags_director = Column(String)
    tags_writer = Column(String)
    tags_star = Column(String)
    originally_available_at = Column(DateTime)
    available_at = Column(DateTime)
    expires_at = Column(DateTime)
    refreshed_at = Column(DateTime)
    year = Column(Integer)
    added_at = Column(DateTime)
    created_at = Column(DateTime)
    updated_at = Column(DateTime)
    deleted_at = Column(DateTime)
    tags_country = Column(String)
    extra_data = Column(String)
    hash = Column(String)
    audience_rating = Column(Float)
    changed_at = Column(Integer, default=0)
    resources_changed_at = Column(Integer, default=0)
    remote = Column(Integer, default=0)


class PlayQueueGenerator(Base):
    __tablename__ = "play_queue_generators"
    id = Column(Integer, primary_key=True)
    playlist_id = Column(Integer, ForeignKey('metadata_items.id'))
    metadata_item_id = Column(Integer, ForeignKey('media_items.metadata_item_id'))
    uri = Column(String)
    limit = Column(Integer)
    continuous = Column(Boolean)
    order = Column(Float)
    created_at = Column(DateTime)
    updated_at = Column(DateTime)
    changed_at = Column(Integer, default=0)
    recursive = Column(Boolean)
    pqg_type = Column('type', Integer)
    extra_data = Column(String)


class MediaItem(Base):
    __tablename__ = 'media_items'

    id = Column(Integer, primary_key=True)
    library_section_id = Column(Integer, index=True)
    section_location_id = Column(Integer)
    metadata_item_id = Column(Integer, ForeignKey('metadata_items.id'), index=True)
    metadata_item = relationship("MetadataItem", backref="media_items")
    type_id = Column(Integer)
    width = Column(Integer)
    height = Column(Integer)
    size = Column(Integer)
    duration = Column(Integer)
    bitrate = Column(Integer)
    container = Column(String(255))
    video_codec = Column(String(255))
    audio_codec = Column(String(255))
    display_aspect_ratio = Column(Float)
    frames_per_second = Column(Float)
    audio_channels = Column(Integer)
    interlaced = Column(Boolean)
    source = Column(String(255))
    hints = Column(String(255))
    display_offset = Column(Integer)
    settings = Column(String(255))
    created_at = Column(DateTime)
    updated_at = Column(DateTime)
    optimized_for_streaming = Column(Boolean)
    deleted_at = Column(DateTime, index=True)
    media_analysis_version = Column(Integer, index=True)
    sample_aspect_ratio = Column(Float)
    extra_data = Column(String(255))
    proxy_type = Column(Integer)
    channel_id = Column(Integer, index=True)
    begins_at = Column(DateTime, index=True)
    ends_at = Column(DateTime, index=True)

class MediaPart(Base):
    __tablename__ = 'media_parts'

    id = Column(Integer, primary_key=True)
    media_item_id = Column(Integer, ForeignKey('media_items.id'), index=True)
    media_item = relationship("MediaItem", backref="media_parts")
    directory_id = Column(Integer, index=True)
    hash = Column(String(255), index=True)
    open_subtitle_hash = Column(String(255))
    file = Column(String(255), index=True)
    index = Column(Integer)
    size = Column(Integer, index=True)
    duration = Column(Integer)
    created_at = Column(DateTime)
    updated_at = Column(DateTime)
    deleted_at = Column(DateTime, index=True)
    extra_data = Column(String(255))

